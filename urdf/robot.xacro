<robot name="robot" xmlns:xacro="http://www.ros.org/wiki/xacro">
    <xacro:property name="PI" value="3.14159265359" />
    <xacro:arg name="ns" default="robot" />

    <!-- Parameters -->
    <xacro:property name="chassis_length" value="0.1" />
    <xacro:property name="chassis_width" value="0.45" />
    <xacro:property name="chassis_height" value="0.01" />

    <xacro:property name="wheel_diameter" value="0.152" />
    <xacro:property name="wheel_radius" value="${wheel_diameter / 2}" />
    <xacro:property name="wheel_width" value="0.046" />

    <xacro:property name="caster_radius" value="0.03" />

    <xacro:property name="min_lift_height" value="0.012" />
    <xacro:property name="max_lift_height" value="0.305" />

    <xacro:property name="body_top_length" value="0.440" />
    <xacro:property name="body_top_width" value="0.309" />
    <xacro:property name="body_top_height" value="0.140" />

    <!-- Base Link -->
    <link name="base_link">
        <!-- <visual>
            <geometry>
                <box size="${chassis_width} ${chassis_length} ${chassis_height}" />
            </geometry>
            <material name="gray" />
        </visual> -->
        <!-- <collision>
            <geometry>
                <box size="${chassis_width} ${chassis_length} ${chassis_height}" />
            </geometry>
        </collision> -->
        <inertial>
            <mass value="5" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.001" />
        </inertial>
    </link>

    <!-- Four Wheels -->
    <link name="wheel_left">
        <visual>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}" />
            </geometry>
            <material name="black" />
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}" />
            </geometry>
        </collision>
        <inertial>
            <mass value="0.01" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.01" />
        </inertial>
    </link>

    <link name="wheel_right">
        <visual>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}" />
            </geometry>
            <material name="black" />
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}" />
            </geometry>
        </collision>
        <inertial>
            <mass value="0.01" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.01" />
        </inertial>
    </link>

    <!-- Joints for Wheels -->
    <joint name="joint_wheel_l" type="continuous">
        <parent link="base_link" />
        <child link="wheel_left" />
        <origin xyz="${-chassis_width/2} 0 -${chassis_height/2}"
            rpy="0 ${-PI/2} 0" />
        <axis xyz="0 0 1" />
    </joint>

    <joint name="joint_wheel_r" type="continuous">
        <parent link="base_link" />
        <child link="wheel_right" />
        <origin xyz="${chassis_width/2} 0 -${chassis_height/2}"
            rpy="0 ${-PI/2} 0" />
        <axis xyz="0 0 1" />
    </joint>

    <link name="caster_forward">
        <!-- <visual>
            <geometry>
                <sphere radius="${caster_radius}" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <material name="green" />
        </visual> -->
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <sphere radius="${caster_radius}" />
            </geometry>
        </collision>
        <!-- <inertial>
            <mass value="0.5" />
            <inertia ixx="3.000e-4" iyy="3.000e-4" izz="3.000e-4" ixy="0" ixz="0" iyz="0" />
        </inertial> -->
    </link>

    <link name="caster_backward">
        <!-- <visual>
            <geometry>
                <sphere radius="${caster_radius}" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <material name="green" />
        </visual> -->
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <sphere radius="${caster_radius}" />
            </geometry>
        </collision>
        <!-- <inertial>
            <mass value="0.5" />
            <inertia ixx="3.000e-4" iyy="3.000e-4" izz="3.000e-4" ixy="0" ixz="0" iyz="0" />
        </inertial> -->
    </link>

    <joint name="caster_forward_joint" type="fixed">
        <origin
            xyz="0 ${body_top_length/2-caster_radius} ${-chassis_height/2-wheel_radius+caster_radius}"
            rpy="0 0 0" />
        <parent link="base_link" />
        <child link="caster_forward" />
    </joint>

    <joint name="caster_backward_joint" type="fixed">
        <origin
            xyz="0 ${-body_top_length/2+caster_radius} ${-chassis_height/2-wheel_radius+caster_radius}"
            rpy="0 0 0" />
        <parent link="base_link" />
        <child link="caster_backward" />
    </joint>


    <!-- Body Link on Top of Telescopic Rod -->
    <link name="body_top">
        <visual>
            <geometry>
                <box size="${body_top_width} ${body_top_length} ${body_top_height}" />
            </geometry>
            <material name="blue" />
        </visual>
        <collision>
            <geometry>
                <box size="${body_top_width} ${body_top_length} ${body_top_height}" />
            </geometry>
        </collision>
        <inertial>
            <mass value="0.1" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.002" ixy="0.0" ixz="0.0" iyy="0.002" iyz="0.0" izz="0.002" />
        </inertial>
    </link>

    <!-- Joint for Body Top -->
    <xacro:property name="lift_origin"
        value="${body_top_height / 2}" />
    <joint name="joint_body_top" type="prismatic">
        <parent link="base_link" />
        <child link="body_top" />
        <origin
            xyz="0 0 ${lift_origin}" />
        <axis xyz="0 0 1" />
        <limit lower="${min_lift_height}" upper="${max_lift_height}"
            effort="1.0" velocity="0.1" /> <!-- 10 cm to 30 cm -->
    </joint>

    <link name="body_top_semantic">
        <visual>
            <geometry>
                <sphere radius="${body_top_width/8}" />
            </geometry>
            <material name="black" />
        </visual>
        <collision>
            <geometry>
                <sphere radius="${body_top_width/8}" />
            </geometry>
        </collision>
    </link>

    <joint name="joint_body_top_semantic" type="fixed">
        <parent link="body_top" />
        <child link="body_top_semantic" />
        <origin
            xyz="0 ${body_top_length/2-body_top_width/8} ${body_top_height/2}" />
    </joint>

    <!-- Transmission for the wheels -->
    <transmission name="trans_wheel_left">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="joint_wheel_l">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="actuator_wheel_left">
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>

    <transmission name="trans_wheel_right">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="joint_wheel_r">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="actuator_wheel_right">
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>

    <transmission name="trans_body_top">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="joint_body_top">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="actuator_body_top">
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>

    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/$(arg ns)</robotNamespace>
        </plugin>
    </gazebo>

    <gazebo reference="base_link">
        <material>Gazebo/Grey</material>
    </gazebo>
    <gazebo reference="wheel_left">
        <material>Gazebo/DarkGrey</material>
    </gazebo>
    <gazebo reference="wheel_right">
        <material>Gazebo/DarkGrey</material>
    </gazebo>
    <gazebo reference="telescopic_rod">
        <material>Gazebo/White</material>
    </gazebo>
    <gazebo reference="body_top">
        <material>Gazebo/DarkYellow </material>
    </gazebo>
    <!-- <gazebo reference="body_top_semantic">
        <sensor type="gpu_ray" name="head_ydlidar_sensor">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>50</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>700</samples>
                        <resolution>1</resolution>
                        <min_angle>${-PI}</min_angle>
                        <max_angle>${PI}</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.12</min>
                    <max>8</max>
                    <resolution>0.72</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_head_ydlidar_controller" filename="libgazebo_ros_gpu_laser.so">
                <robotNamespace>/$(arg ns)</robotNamespace>
                <topicName>scan</topicName>
                <frameName>body_top_semantic</frameName>
            </plugin>
        </sensor>
        <material>Gazebo/FlatBlack</material>
    </gazebo> -->

    <gazebo reference="caster_forward">
        <mu1 value="0.0" />
        <mu2 value="0.0" />
    </gazebo>
    <gazebo reference="caster_backward">
        <mu1 value="0.0" />
        <mu2 value="0.0" />
    </gazebo>
</robot>